class Home < ApplicationRecord
  def self.accumulation(age)
    case age
    when 10
      (30000000 * 0.00283) / 12
    when 11
      (30000000 * 0.00298) / 12
    when 12
      (30000000 * 0.00314) / 12
    when 13
      (30000000 * 0.00330) / 12
    when 14
      (30000000 * 0.00348) / 12
    when 15
      (30000000 * 0.00367) / 12
    when 16
      (30000000 * 0.00386) / 12
    when 17
      (30000000 * 0.00407) / 12
    when 18
      (30000000 * 0.00429) / 12
    when 19
      (30000000 * 0.00453) / 12
    when 20
      (30000000 * 0.00478) / 12
    when 21
      (30000000 * 0.00504) / 12
    when 22
      (30000000 * 0.00532) / 12
    when 23
      (30000000 * 0.00561) / 12
    when 24
      (30000000 * 0.00593) / 12
    when 25
      (30000000 * 0.00626) / 12
    when 26
      (30000000 * 0.00662) / 12
    when 27
      (30000000 * 0.00699) / 12
    when 28
      (30000000 * 0.00739) / 12
    when 29
      (30000000 * 0.00782) / 12
    when 30
      (30000000 * 0.00828) / 12
    when 31
      (30000000 * 0.00876) / 12
    when 32
      (30000000 * 0.00928) / 12
    when 33
      (30000000 * 0.00984) / 12
    when 34
      (30000000 * 0.01043) / 12
    when 35
      (30000000 * 0.01107) / 12
    when 36
      (30000000 * 0.01176) / 12
    when 37
      (30000000 * 0.01249) / 12
    when 38
      (30000000 * 0.01328) / 12
    when 39
      (30000000 * 0.01413) / 12
    when 40
      (30000000 * 0.01505) / 12
    when 41
      (30000000 * 0.01605) / 12
    when 42
      (30000000 * 0.01712) / 12
    when 43
      (30000000 * 0.01829) / 12
    when 44
      (30000000 * 0.01956) / 12
    when 45
      (30000000 * 0.02095) / 12
    when 46
      (30000000 * 0.02247) / 12
    when 47
      (30000000 * 0.02414) / 12
    when 48
      (30000000 * 0.02597) / 12
    when 49
      (30000000 * 0.02800) / 12
    when 50
      (30000000 * 0.03024) / 12
    when 51
      (30000000 * 0.03275) / 12
    when 52
      (30000000 * 0.03555) / 12
    when 53
      (30000000 * 0.03870) / 12
    when 54
      (30000000 * 0.04227) / 12
    when 55
      (30000000 * 0.04634) / 12
    when 56
      (30000000 * 0.05102) / 12
    when 57
      (30000000 * 0.05646) / 12
    when 58
      (30000000 * 0.06283) / 12
    when 59
      (30000000 * 0.07039) / 12
    when 60
      (30000000 * 0.07950) / 12
    when 61
      (30000000 * 0.09069) / 12
    when 62
      (30000000 * 0.10472) / 12
    when 63
      (30000000 * 0.12282) / 12
    when 64
      (30000000 * 0.14702) / 12
    when 65
      (30000000 * 0.18097) / 12
    when 66
      (30000000 * 0.23201) / 12
    when 67
      (30000000 * 0.31721) / 12
    when 68
      (30000000 * 0.48780) / 12
    when 69
      (30000000 * 1) / 12
    else
      0
    end
  end

  # result = accumulation(24)

  # puts result
end
